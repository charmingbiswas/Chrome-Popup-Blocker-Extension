!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.BlockListGeneratorPlugin=t():e.BlockListGeneratorPlugin=t()}(global,(()=>(()=>{"use strict";var e={n:t=>{var o=t&&t.__esModule?()=>t.default:()=>t;return e.d(o,{a:o}),o},d:(t,o)=>{for(var r in o)e.o(o,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:o[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};e.d(t,{default:()=>s});const o=require("path");var r=e.n(o);const n=require("fs");var i=e.n(n);const s=class{apply(e){e.hooks.afterEmit.tap("BlockListGeneratorPlugin",(e=>{const t=r().resolve(process.cwd(),"public/easyList.txt"),o=i().readFileSync(t,{encoding:"utf-8"}).split("\n");let n=new RegExp(/^[\x00-\x7F]+$/g),s=[];o.forEach(((e,t)=>{if(e.match(n)){let o={id:t+1,priority:1,action:{type:"block"},condition:{urlFilter:`${e}`,resourceTypes:["script","main_frame","sub_frame"]}};s.push(o)}})),i().writeFileSync(r().resolve(process.cwd(),"build/rules.json"),JSON.stringify(s),{encoding:"utf-8"})}))}};return t.default})()));